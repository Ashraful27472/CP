
#include<bits/stdc++.h>
using namespace std;
int func1(int ind,int amount,vector<int> & coins){
    if(amount == 0)
        return 1;
        // if (amount < 0)
        //     return 0;
        if (ind < 0)
            return 0;
        int ways = 0;
        for (int coin_amount = 0; coin_amount <= amount; coin_amount += coins[ind]) // gives us how many function need each function of each layer by increasing that indx value 0x,1x,2x,3x...;
        {// amount basis need..
            ways += func1(ind - 1, amount - coin_amount, coins);//gives us recursive layer
        }
    return ways;
}
int main(){
    int n;
    cin >> n;
   // memset(dp, -1, sizeof(dp));
    vector<int> arr(3);
    for (int i = 0; i < 3; i++)
    {
        cin >> arr[i];
    }
    cout << func1(2,n,arr);
}
